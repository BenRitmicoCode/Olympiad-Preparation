#include <iostream>
#include <set>
#include <vector>
using namespace std;
const int MAXN = 1e5+5;
multiset<int> v1[MAXN];
int deg[MAXN];
void addedge(int x,int y){
    v1[x].insert(y);
    v1[y].insert(x);
    deg[x]++;
    deg[y]++;
}
vector<int> res;
vector<int> path;
int main(){
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    int t;
    cin>>t;
    while(t--){
        int n;
        cin>>n;
        res.clear();
        path.clear();;
        for(int i=0;i<=n;i++){
            v1[i].clear();
            deg[i] = 0;
        }
        for(int i=2;i<n;i++){
            int x;
            cin>>x;
            addedge(i,x);
        }
        for(int i=2;i<n;i++){
            int x;
            cin>>x;
            if(deg[i]%2||(x==n && deg[n] == 0)){
                addedge(i,x);
            }
        }
    int u = n;
    for(int i=2;i<n;i++){
        if(deg[i]%2){
            u = i;
            break;
        }
    }
    path.push_back(u);
        while(!path.empty()){
            //cout<<u<<endl;
            if(deg[u]){
                path.push_back(u);
                auto it = v1[u].begin();
                int v = *it;
                deg[u]--;
                deg[v]--;
                v1[u].erase(it);
                v1[v].erase(v1[v].find(u));
                u=v;
            }else{
                res.push_back(u);
                u = path.back();
                path.pop_back();
            }
        }
        cout<<"YES";
        
        cout<<"\n";
        cout<<res.size()-1<<endl;
        for(int x:res){
            cout<<x<<" ";
        }
        cout<<"\n";
    }
    
}
