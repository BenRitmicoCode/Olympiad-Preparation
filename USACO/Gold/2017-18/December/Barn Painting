#include <iostream>
#include <fstream>
#include <vector>
using namespace std;
const long long MOD = 1000000007;
vector<long long> arr[100100];
long long coloured[100100];
long long dp[100100][3];
long long dfs(long long curr,long long par,long long colour){
    if(coloured[curr] && colour!=coloured[curr]){
        return dp[curr][colour] = 0;
    }
    if(dp[curr][colour]){
        return dp[curr][colour];
    }
    dp[curr][colour] = 1;
    for(auto x:arr[curr]){
        if(x == par){
            continue;
        }
        long long hold = 0;
        for(long long i=1;i<=3;i++){
            if(colour == i){
                continue;
            }
            hold+=dfs(x,curr,i);
            hold%=MOD;
        }
        dp[curr][colour]*=hold;
        dp[curr][colour]%=MOD;
    }
    return dp[curr][colour];
}
int main() {
    ifstream fin("barnpainting.in");
    ofstream fout("barnpainting.out");
	long long n,k;
	fin>>n>>k;
	for(long long i=1;i<n;i++){
	    long long x,y;
	    fin>>x>>y;
	    arr[x].push_back(y);
	    arr[y].push_back(x);
	}
	for(long long i=0;i<k;i++){
	    long long x,y;
	    fin>>x>>y;
	    coloured[x] = y;
	}
	fout<<(dfs(1,-1,1)+dfs(1,-1,2)+dfs(1,-1,3))%MOD<<endl;
}
