#include <iostream>
#include <vector>
using namespace std;
const int MAXN = 1e5+5;
int dp[35][35];
vector<pair<int,pair<int,int>>> v1[MAXN];
int calc(int l1,int r1,int l2,int r2){
    int ans =0;
    if(l2>l1){
        ans+=abs(l2-l1);
    }
    if(r1>r2){
        ans+=abs(r2-r1);
    }
    return ans;
}
int main(){
    int n,m;
    cin>>n>>m;
    for(int i=0;i<m;i++){
        int x,y;
        cin>>x>>y;
        int l,r;
        cin>>l>>r;
        v1[x].push_back(make_pair(y,make_pair(l,r)));
    }
    for(int i=1;i<=32;i++){
        for(int j=1;j<=32;j++){
            dp[i][j] = 1e9;
        }
    }
   
    for(int i=1;i<=32;i++){
        for(int j=i;j<=32;j++){
            for(int k=0;k<v1[1].size();k++){
                int to = v1[1][k].first;
                int temp = calc(i,j,v1[1][k].second.first,v1[1][k].second.second);
                
                while(v1[to].size()){
                    
                    temp+=calc(i,j,v1[to][0].second.first,v1[to][0].second.second);
                    to = v1[to][0].first;
                }
                dp[i][j] = min(dp[i][j],temp);
            }
        }
    }
    for(int i=1;i<=32;i++){
        for(int j=1;j<=i;j++){
            for(int k=j;k<i;k++){
                dp[j][i] = min(dp[j][i],dp[j][k]+dp[k+1][i]);
                
            }
        }
    }
    cout<<dp[1][32]<<endl;
}
